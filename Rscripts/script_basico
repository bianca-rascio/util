library(RMySQL)
library(googlesheets)
library(dplyr)
library(lubridate)
library(tidyr)
library(stringr)
library(utils)
library(gmailr)
library(gmailr)
source("/home/tvglobo/Rscripts/Funcoes/bqr_upload.R")
source("/home/tvglobo/Rscripts/Funcoes/bqr_readtable.R")
source("/home/tvglobo/Rscripts/Funcoes/date_pattern.R")
gc()


setwd("/home/tvglobo/Rscripts/Automatizacao_gmail/gmailR/Arquivos_salvos")

campanha1 <- "unilever_fut20"


#Base DFP
yesterday <- date_pattern()
temp_file_list <- list.files(pattern = paste("Base",campanha1,"dfp", sep="_"))
file <- grep(yesterday, temp_file_list)
##Inicializar vetor
basedfp <- ""
##Tentar ler base do dia anterior
basedfp <- read.csv(temp_file_list[file], sep = "," , skip = 9 ,header = TRUE,stringsAsFactors=FALSE, fileEncoding = "UTF-8-BOM", colClasses= "character") 
##Forçar leitura
if(!is.data.frame(basedfp)){
  basedfp <- read.csv(paste(paste("Base",campanha1,"dfp", sep="_"), "csv", sep = "."), sep = "," , skip =10 ,header = TRUE,stringsAsFactors=FALSE, fileEncoding = "UTF-8-BOM", colClasses= "character")
}
names(basedfp) <- c("item_de_linha_completo","data","anuncio_completo","tamanho_do_criativo","categoria_de_dispositivo","pedido_completo","position","position_id","id_do_item_de_linha","id_do_anuncio","codigo_da_categoria_de_dispositivos","id_do_pedido","impressoes","cliques","receita","ecpm","impressoes_mensuraveis_activeview","impressoes_visiveis_activeview", "inicio", "ponto_medio", "concluido")
basedfp <- filter (basedfp, !item_de_linha_completo == "Total")
##Forcando valores
basedfp$impressoes <- gsub("\\.", "", basedfp$impressoes)
basedfp$impressoes <- as.numeric(basedfp$impressoes)
basedfp$cliques <- gsub("\\.", "", basedfp$cliques)
basedfp$cliques <- as.numeric(basedfp$cliques)
basedfp$receita <- gsub("\\.", "", basedfp$receita)
basedfp$receita <- gsub("\\,", ".", basedfp$receita)
basedfp$receita <- as.numeric(basedfp$receita)
basedfp$ecpm <- gsub("\\.", "", basedfp$ecpm)
basedfp$ecpm <- gsub("\\,", ".", basedfp$ecpm)
basedfp$ecpm <- as.numeric(basedfp$ecpm)
basedfp$impressoes_mensuraveis_activeview <- gsub("\\.", "", basedfp$impressoes_mensuraveis_activeview)
basedfp$impressoes_mensuraveis_activeview <- as.numeric(basedfp$impressoes_mensuraveis_activeview)
basedfp$impressoes_visiveis_activeview <- gsub("\\.", "", basedfp$impressoes_visiveis_activeview)
basedfp$impressoes_visiveis_activeview <- as.numeric(basedfp$impressoes_visiveis_activeview)
basedfp$inicio <- gsub("\\.", "", basedfp$inicio)
basedfp$inicio <- as.numeric(basedfp$inicio)
basedfp$ponto_medio <- gsub("\\.", "", basedfp$ponto_medio)
basedfp$ponto_medio <- as.numeric(basedfp$ponto_medio)
basedfp$concluido <- gsub("\\.", "", basedfp$concluido)
basedfp$concluido <- as.numeric(basedfp$concluido)
basedfp$data <- dmy (basedfp$data)
##Tirando id's de order e item de linha
basedfp$pedido <- basedfp$pedido_completo
basedfp$item_de_linha <- str_sub(basedfp$item_de_linha_completo, start = 10)
basedfp$anuncio <- basedfp$anuncio_completo
basedfp <- subset(basedfp, select = -c(item_de_linha_completo, pedido_completo, anuncio_completo))
##Nomendo a campanha
basedfp$campanha <- campanha1
##Removendo acentos de itens de linha
basedfp$item_de_linha <- iconv(basedfp$item_de_linha, to="ASCII//TRANSLIT")
basedfp$anuncio <- iconv(basedfp$anuncio, to="ASCII//TRANSLIT")


#Criando base para big numbers geral 
##Separando display e video
basedfp$tipo_campanha [is.na(basedfp$inicio)] <- "Display"
basedfp$tipo_campanha [!is.na(basedfp$inicio)] <- "Video"
#Preparando base geral 
base_overview_geral <- basedfp[c("data","campanha","tipo_campanha","pedido","item_de_linha","anuncio","categoria_de_dispositivo","tamanho_do_criativo","position","impressoes", "cliques", "receita", "impressoes_visiveis_activeview","impressoes_mensuraveis_activeview","inicio", "ponto_medio", "concluido")]
base_overview_geral2 <- base_overview_geral
##Renomeando devices
devices <- distinct(base_overview_geral2, categoria_de_dispositivo)
devices$devices2 <- ifelse((devices$categoria_de_dispositivo == "Desktop"), "Desktop", "Mobile")
base_overview_geral3 <- left_join(base_overview_geral2, devices, by = ("categoria_de_dispositivo"), copy = FALSE, suffix = c(".x", ".y"))
##Renomeando itens de linha
itens <- distinct(base_overview_geral3, item_de_linha)
source("/home/tvglobo/Rscripts/Funcoes/filter_detect_loop.R")
old_pattern <- c("MP", "MA")
new_pattern <- c("Patrocinio","Midia Apoio")
pattern_list <- tibble(old_pattern, new_pattern)  
itens2 <- filter_detect_loop (pattern_list)
itens$tipo_line <- "midia_patrocinio"
base_overview_geral4 <- left_join(base_overview_geral3, itens2, by = ("item_de_linha"), copy = FALSE, suffix = c(".x", ".y"))


#Filtrando so display
#Criando base BN geral display
basedfp_display <- filter (base_overview_geral4, tipo_campanha == "Display")
##Agrengando
basedfp_display2 <- basedfp_display[c("data","campanha","pedido","item_de_linha","tipo_line","anuncio","devices2","tamanho_do_criativo","position","impressoes", "cliques", "receita", "impressoes_visiveis_activeview","impressoes_mensuraveis_activeview")]
basedfp_display2[is.na(basedfp_display2)] <- 0
basedfp_display3 <-aggregate(.~ data +campanha +pedido +item_de_linha +tipo_line +anuncio +devices2 +tamanho_do_criativo +position, basedfp_display2, sum, na.action = na.pass) 


#Filtrando so video
#Criando base BN geral video
basedfp_video <- filter (base_overview_geral4, tipo_campanha == "Video")
##Agrengando
basedfp_video2 <- basedfp_video[c("data","campanha","pedido","item_de_linha","tipo_line","anuncio","devices2","tamanho_do_criativo","position", "receita", "inicio", "ponto_medio", "concluido")]
basedfp_video2[is.na(basedfp_video2)] <- 0
basedfp_video3 <-aggregate(.~ data +campanha +pedido +item_de_linha +tipo_line +anuncio +devices2 +tamanho_do_criativo +position, basedfp_video2, sum, na.action = na.pass) 


#Visao por devices + RECEITA
base_devices_geral <- base_overview_geral4[c("data","campanha","pedido","item_de_linha","tipo_line","anuncio","devices2","tamanho_do_criativo","position","impressoes", "cliques", "impressoes_visiveis_activeview","impressoes_mensuraveis_activeview", "receita")]
base_devices_geral[is.na(base_devices_geral)] <- 0
base_devices_geral2 <-aggregate(.~ data +campanha +pedido +item_de_linha +tipo_line +anuncio +devices2 +tamanho_do_criativo +position, base_devices_geral, sum, na.action = na.pass) 


#Visao por regiao
temp_file_list_regiao <- list.files (pattern = paste("base",campanha1,"regiao","dfp", sep="_"))
file2 <- grep(yesterday, temp_file_list_regiao)
##Inicializar vetor
basedfp_regiao <- ""
##Tentar ler base do dia anterior
basedfp_regiao <- read.csv(temp_file_list_regiao[file2], sep = "," , skip = 9 ,header = TRUE,stringsAsFactors=FALSE, fileEncoding = "UTF-8-BOM", colClasses= "character") 
##Forçar leitura
if(!is.data.frame(basedfp_regiao)){
  basedfp_regiao <- read.csv(paste(paste("base",campanha1,"regiao","dfp", sep="_"), "csv", sep = "."), sep = "," , skip = 10 ,header = TRUE,stringsAsFactors=FALSE, fileEncoding = "UTF-8-BOM", colClasses= "character")
}
##Tratando dados
names(basedfp_regiao) <- c("regiao","data","pais","cidade","id_da_regiao","id_do_pais","id_da_cidade","impressoes","cliques","receita")
basedfp_regiao <- filter (basedfp_regiao, !regiao == "Total")
basedfp_regiao2 <- basedfp_regiao[c("regiao","data","pais","cidade","impressoes","cliques")]
basedfp_regiao2$impressoes <- gsub("\\.", "", basedfp_regiao2$impressoes)
basedfp_regiao2$impressoes <- as.numeric(basedfp_regiao2$impressoes)
basedfp_regiao2$cliques <- gsub("\\.", "", basedfp_regiao2$cliques)
basedfp_regiao2$cliques <- as.numeric(basedfp_regiao2$cliques)
basedfp_regiao3 <- filter (basedfp_regiao2, pais == "Brazil")
basedfp_regiao4 <- aggregate(.~ data +pais +regiao +cidade, basedfp_regiao3, sum, na.action=na.pass)
estado <-str_sub(basedfp_regiao4$regiao, start = 9)
estado <- as.data.frame(estado)
basedfp_regiao4$estado <- estado[,1]
basedfp_regiao5 <- basedfp_regiao4[c("data","pais","estado","impressoes", "cliques")]
basedfp_regiao5 <- aggregate(.~ data + pais + estado, basedfp_regiao5, sum)
basedfp_regiao5$estado <- as.character(basedfp_regiao5$estado)
basedfp_regiao5$estado [!nzchar(basedfp_regiao5$estado)] <- "Nao identificado"
basedfp_regiao5$campanha <- campanha1
basedfp_regiao5$data <- dmy(basedfp_regiao5$data)


#Preparando as bases para atualizar com os valores da nova campanha
#Lendo historicos no banco
source("/home/tvglobo/Rscripts/Funcoes/bqr_readtable.R")
##Base Big Numbers Display Geral
display_geral <- bqr_readtable('select * from `performance_dashboards.base_display_geral`')
display_geral$data <- ymd(display_geral$data)
##Base Regiao Geral
regiao_geral <- bqr_readtable('select * from `performance_dashboards.base_regiao_geral`')
regiao_geral$data <- ymd(regiao_geral$data)
##Base Big Numbers Video Geral
video_geral <- bqr_readtable('select * from `performance_dashboards.base_video_geral`')
video_geral$data <- ymd(video_geral$data)
##Base Devices geral
devices_geral <- bqr_readtable('select * from `performance_dashboards.base_devices_geral`')
devices_geral$data <- ymd(devices_geral$data)


#Limpando as linhas que contem a campanha em questao
display_geral2 <- filter (display_geral, campanha != campanha1)
regiao_geral2 <- filter (regiao_geral, campanha != campanha1)
video_geral2 <- filter (video_geral, campanha != campanha1)
devices_gera2 <- filter (devices_geral, campanha != campanha1)

#Bind para pregar novos valores (valores da campanha em questao)
basedfp_display4 <- rbind(display_geral2, basedfp_display3)
basedfp_regiao6 <- rbind(regiao_geral2,basedfp_regiao5)
basedfp_video4 <- rbind(video_geral2, basedfp_video3)
base_devices_geral3 <- rbind(devices_gera2, base_devices_geral2)


#Exportando para o banco de dados
source("/home/tvglobo/Rscripts/Funcoes/bqr_upload.R")
##Base Big Numbers Display Geral
bqr_upload("inteligencia-gglobo-sandbox", "performance_dashboards", "base_display_geral", basedfp_display4, TRUE)
##Base Big Numbers Video Geral
bqr_upload("inteligencia-gglobo-sandbox", "performance_dashboards", "base_video_geral", basedfp_video4, TRUE)
##Base Regiao Geral
bqr_upload("inteligencia-gglobo-sandbox", "performance_dashboards", "base_regiao_geral", basedfp_regiao6, TRUE)
##Base Devices Geral
bqr_upload("inteligencia-gglobo-sandbox", "performance_dashboards", "base_devices_geral", base_devices_geral3, TRUE)



#Atualizando controle no bq
source("/home/tvglobo/Rscripts/Funcoes/controle_bq.R")
controle <- controle_bq(paste0(campanha1))
source("/home/tvglobo/Rscripts/Funcoes/bqr_upload.R")
bqr_upload("inteligencia-gglobo-sandbox", "performance_dashboards", "controle", controle, FALSE)


rm(list=ls())
#.rs.restartR()




